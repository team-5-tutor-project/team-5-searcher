@page "/Favorites"
@using Microsoft.AspNetCore.Components
@using TutorProject.Searcher.Front.Models
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>Favorites</PageTitle>

<h1>Favorites</h1>

<table class="table">
        <thead>
        <tr>
            <th>Имя</th>
            <th>Формат работы</th>
            <th>Описание</th>
            <th>Цена за час</th>
            <th>Классы обучения</th>
            <th>Предметы</th>
        </tr>
        </thead>
        <tbody>
        @{
            System.Diagnostics.Debug.Assert(TutorsList != null, nameof(TutorsList) + " != null");
        }
        @foreach (var tut in TutorsToShowList)
        {
            <tr>
                <td>@tut.Tutor.Name</td>
                <td>@tut.Tutor.WorkFormat</td>
                <td>@tut.Tutor.Description</td>
                <td>@tut.Tutor.PricePerHour</td>
                <td>@tut.Tutor.PupilMinClass - @tut.Tutor.PupilMaxClass</td>
                <td>@tut.Subjects</td>
            </tr>
        }
        </tbody>
</table>

@code {
    private Guid ClientID { get; set; }
    private List<TutorResult>? TutorsList { get; set; }
    public List<TutorToShow>? TutorsToShowList { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        ClientID = Guid.Parse("12cbe563-a53d-477e-b8ba-9a1741d80567");
        TutorsList = new List<TutorResult>();
        
        var response = await Http.GetAsync($"https://localhost:7263/favorites/{ClientID}/getTutorsFromFavorites");
        TutorsList = response.Content.ReadFromJsonAsync<List<TutorResult>>().Result;
        TutorsToShowList = new List<TutorToShow>();
        foreach (var tutor in TutorsList)
        {
            var resp = await Http.GetAsync($"https://localhost:7263/searcher/{tutor.Id}/getAllSubjects");
            var subjects = resp.Content.ReadFromJsonAsync<List<string>>().Result;
            TutorsToShowList.Add(new TutorToShow(tutor, subjects));
        }
    }
}